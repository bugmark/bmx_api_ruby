=begin
#Bugmark API

#all calls require BASIC AUTH

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for BmxApiRuby::IssuesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'IssuesApi' do
  before do
    # run before each test
    @instance = BmxApiRuby::IssuesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of IssuesApi' do
    it 'should create an instance of IssuesApi' do
      expect(@instance).to be_instance_of(BmxApiRuby::IssuesApi)
    end
  end

  # unit tests for get_issues
  # List all issues
  # List all issues
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit count limit
  # @return [Array<IssueOverview>]
  describe 'get_issues test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_issues_issue_exid
  # Show issue detail
  # Show issue detail
  # @param issue_exid issue exid
  # @param [Hash] opts the optional parameters
  # @return [IssueDetail]
  describe 'get_issues_issue_exid test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_issues_issue_exid_contracts
  # Show issue contracts
  # Show issue contracts
  # @param issue_exid issue exid
  # @param [Hash] opts the optional parameters
  # @return [Array<ContractDetail>]
  describe 'get_issues_issue_exid_contracts test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_issues_issue_exid_offers
  # Show issue offers
  # Show issue offers
  # @param issue_exid issue exid
  # @param [Hash] opts the optional parameters
  # @return [Array<OfferDetail>]
  describe 'get_issues_issue_exid_offers test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_issues_exid
  # Sync
  # Sync
  # @param exid issue exid
  # @param [Hash] opts the optional parameters
  # @option opts [String] :repo_uuid repo uuid
  # @option opts [String] :issue_uuid issue uuid
  # @option opts [String] :title issue title
  # @option opts [String] :status issue status
  # @option opts [String] :labels TBD
  # @option opts [String] :xfields TBD
  # @option opts [String] :jfields TBD
  # @return [IssueDetail]
  describe 'post_issues_exid test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
