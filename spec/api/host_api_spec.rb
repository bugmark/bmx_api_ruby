=begin
#Bugmark API

#all calls require BASIC AUTH

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for BmxApiRuby::HostApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'HostApi' do
  before do
    # run before each test
    @instance = BmxApiRuby::HostApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of HostApi' do
    it 'should create an instance of HostApi' do
      expect(@instance).to be_instance_of(BmxApiRuby::HostApi)
    end
  end

  # unit tests for get_host_counts
  # counts
  # Show host object counts: number of users, offers, contracts, etc. 
  # @param [Hash] opts the optional parameters
  # @return [HostCount]
  describe 'get_host_counts test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_host_info
  # get host info
  # Show host info: host-time, day offset, datastore type, etc. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :strftime STRFTIME string for host_time
  # @return [HostInfo]
  describe 'get_host_info test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_host_next_week_ends
  # next week-ends
  # next week-ends
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count count (default 4)
  # @return [NextWeekEnds]
  describe 'get_host_next_week_ends test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_host_ping
  # check server access
  # check server access
  # @param [Hash] opts the optional parameters
  # @return [Status]
  describe 'get_host_ping test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_host_rebuild
  # rebuild
  # Destroy all data and rebuild the system. The rebuilt system  will have one user: &#x60;user/pass&#x60; &#x3D; &#x60;admin@bugmark.net/bugmark&#x60;.  To run this command, you must post a confirmation parameter:  &#x60;/host/rebuild?confirm&#x3D;destroy_all_data&#x60;  Optionally, you can use the &#39;with_day_offset&#39; param to set the start  date for your system.  This can be used for simulations where you want to use historical data:  &#x60;host/rebuild?confirm&#x3D;destroy_all_data&amp;with_day_offset&#x3D;-90&#x60;  The rebuild command is intended for use on hosts dedicated for  research and testing. (and not production!)  The rebuild command will work for hosts with &#x60;mutable&#x60; datastores, and will fail for hosts with &#x60;permanent&#x60; datastores.  View the datastore setting with the &#x60;/hosts/info&#x60; command. 
  # @param affirm confirmation
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :with_day_offset initial day offset
  # @return [Status]
  describe 'post_host_rebuild test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_host_increment_day_offset
  # increment day offset
  # increment day offset
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count count (default 1)
  # @return [Status]
  describe 'put_host_increment_day_offset test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_host_increment_hour_offset
  # increment hour offset
  # increment hour offset
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count count (default 1)
  # @return [Status]
  describe 'put_host_increment_hour_offset test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_host_set_current_time
  # set current time
  # set current time
  # @param [Hash] opts the optional parameters
  # @return [Status]
  describe 'put_host_set_current_time test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
